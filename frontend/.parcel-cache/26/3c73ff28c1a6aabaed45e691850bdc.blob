var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactSelect = require('react-select');
  var _reactSelectDefault = _parcelHelpers.interopDefault(_reactSelect);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _jsxFileName = "C:\\Users\\HP\\Desktop\\Assignments\\PracticeExam2\\frontend\\components\\Books\\addBooks.js";
  const initalStates = {
    "bookName": '',
    "ISBN": 0,
    "bookAuthor": '',
    "bookPrice": 0,
    "YOP": 0,
    "publisher": '',
    "authorList": [],
    "authorOptions": [],
    "selectedAuthor": ''
  };
  class AddBook extends _react.Component {
    constructor(props) {
      super(props);
      this.onChange = this.onChange.bind(this);
      this.onSelected = this.onSelected.bind(this);
      this.onSubmit = this.onSubmit.bind(this);
      this.state = initalStates;
    }
    componentDidMount() {
      _axiosDefault.default.get('http://localhost:8080/author/getAuthors').then(response => {
        this.setState({
          authorList: response.data.data
        }, () => {
          let data = [];
          console.log('RESPONSE ', this.state.authorList);
          this.state.authorList.map((item, key) => {
            let author = {
              value: item._id,
              label: item.firstName + " " + item.lastName
            };
            data.push(author);
          });
          this.setState({
            authorOptions: data
          });
        });
      });
    }
    onSelected(e) {
      this.setState({
        selectedAuthor: e.value
      });
    }
    onChange(e) {
      this.setState({
        [e.target.name]: e.target.value
      });
    }
    onSubmit(e) {
      e.preventDefault();
      let book = {
        "bookName": this.state.bookName,
        "ISBN": this.state.ISBN,
        "bookAuthor": this.state.selectedAuthor,
        "bookPrice": this.state.bookPrice,
        "bookYOP": this.state.YOP,
        "bookPublisher": this.state.publisher
      };
      _axiosDefault.default.post('http://localhost:8080/book/addBook', book).then(response => {
        alert('Book Data added Successfully');
      }).catch(error => {
        alert(error.message);
      });
    }
    render() {
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "container",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 70,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 71,
            columnNumber: 17
          }
        }, "Create Book"), /*#__PURE__*/_reactDefault.default.createElement("form", {
          onSubmit: this.onSubmit,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 72,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 73,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "bookName",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 74,
            columnNumber: 25
          }
        }, "Book Name"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "text",
          className: "form-control",
          id: "bookName",
          name: "bookName",
          value: this.state.bookName,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 84,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "bookISBN",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 85,
            columnNumber: 25
          }
        }, "Book ISBN"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "number",
          className: "form-control",
          id: "ISBN",
          name: "ISBN",
          value: this.state.ISBN,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 86,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactSelectDefault.default, {
          options: this.state.authorOptions,
          onChange: this.onSelected,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 95,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 99,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "bookPrice",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 100,
            columnNumber: 25
          }
        }, "Book Price"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "number",
          className: "form-control",
          id: "bookPrice",
          name: "bookPrice",
          value: this.state.bookPrice,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 101,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 110,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "bookYOP",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 111,
            columnNumber: 25
          }
        }, "Book Published Year"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "number",
          className: "form-control",
          id: "YOP",
          name: "YOP",
          value: this.state.YOP,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 112,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 121,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "bookPublisher",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 122,
            columnNumber: 25
          }
        }, "Book Publisher"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "text",
          className: "form-control",
          id: "publisher",
          name: "publisher",
          value: this.state.publisher,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 123,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("button", {
          type: "submit",
          className: "btn btn-primary",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 133,
            columnNumber: 21
          }
        }, "Submit")))
      );
    }
  }
  exports.default = AddBook;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
